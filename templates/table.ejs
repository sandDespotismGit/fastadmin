<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title><%= title %></title>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />

    <style>
      body {
        font-family: "Montserrat", sans-serif;
        margin: 0;
        display: flex;
        height: 100vh;
        background-color: rgb(24, 24, 38);
        color: #ddd;
      }

      .sidebar {
        width: 200px;
        background-color: rgb(33, 34, 51);
        color: white;
        padding: 20px;
        box-sizing: border-box;
      }

      .sidebar h2 {
        font-size: 24px;
        margin-bottom: 20px;
        font-family: "Montserrat", sans-serif;
      }

      .sidebar a {
        display: block;
        color: white;
        text-decoration: none;
        margin-bottom: 8px;
        padding: 8px;
        border-radius: 4px;
        transition: background-color 0.2s ease;
        background-color: rgb(24, 24, 38);
      }

      .sidebar a:hover,
      .sidebar a.active {
        background-color: rgb(73, 69, 255);
      }

      .content {
        flex: 1;
        padding: 20px;
        overflow: auto;
      }

      table {
        border-collapse: collapse;
        width: 100%;
        margin-bottom: 30px;
      }

      th,
      td {
        border: 1px solid #ddd;
        padding: 8px;
      }

      th {
        background-color: #f4f4f4;
      }

      form.inline {
        display: inline;
      }

      form.add-form input {
        width: 100%;
        padding: 6px;
        box-sizing: border-box;
      }

      button {
        padding: 5px 10px;
        font-weight: bold;
        cursor: pointer;
      }

      input {
        padding: 5px;
        width: 300px;
        display: block;
        background-color: rgb(33, 34, 51);
        color: white;
        border: 2px solid rgb(115, 112, 237);
        border-radius: 12px;
      }

      .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
        z-index: 9999;
      }

      .modal-content {
        background-color: rgb(24, 24, 38);
        margin: 5% auto;
        padding: 20px;
        width: 80%;
        max-height: 80%;
        overflow-y: auto;
        border-radius: 8px;
      }

      .modal-table {
        width: 100%;
        border-collapse: collapse;
      }

      .modal-table th,
      .modal-table td {
        border: 1px solid #ccc;
        padding: 8px;
        text-align: left;
      }

      .selected-label {
        margin-left: 10px;
        font-style: italic;
        color: #666;
      }

      .close {
        float: right;
        font-size: 24px;
        cursor: pointer;
      }
    </style>
  </head>

  <body>
    <!-- Sidebar -->
    <div class="sidebar">
      <h2>Fastadmin</h2>
      <% allTables.forEach(tbl => { %>
      <a
        href="/admin/<%= tbl %>"
        class="<%= tbl === tableName ? 'active' : '' %>"
        title="<%= config.tables[tbl]?.title || tbl %>"
        ><%= tbl %></a
      >
      <% }) %>
    </div>

    <!-- Main Content -->
    <div class="content">
      <h1 style="font-size: 24px"><%= title %></h1>

      <h2 style="font-size: 20px">–°–≤—è–∑–∏</h2>
      <% if (relations && relations.length > 0) { %>
      <p>–≠—Ç–∞ —Ç–∞–±–ª–∏—Ü–∞ —Å–≤—è–∑–∞–Ω–∞ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏:</p>
      <div
        style="
          display: flex;
          flex-direction: row;
          align-items: center;
          justify-content: flex-start;
          gap: 20px;
          margin-bottom: 20px;
          background-color: rgb(33, 34, 51);
          border-radius: 12px;
          padding: 15px;
        "
      >
        <% relations.filter((relation) => (relation.REFERENCED_TABLE_NAME ===
        tableName || relation.TABLE_NAME === tableName) &&
        (relation.REFERENCED_TABLE_NAME != null && relation.TABLE_NAME != null)
        ).forEach(function(elem) { var relatedTable = elem.REFERENCED_TABLE_NAME
        === tableName ? elem.TABLE_NAME : elem.REFERENCED_TABLE_NAME; %>

        <a
          style="
            color: rgb(115, 112, 237);
            background-color: rgb(24, 24, 38);
            border-radius: 12px;
            padding: 10px 20px;
            font-weight: 700;
          "
          href="/admin/<%= relatedTable %>"
          ><%= relatedTable %></a
        >

        <% }); %>
      </div>
      <% } else { %>
      <p>–°–≤—è–∑–µ–π —Å –¥—Ä—É–≥–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>
      <% } %>
      <style>
        .table {
          display: flex;
          flex-direction: column;
          border: 2px solid #212233;
          border-radius: 12px;
          overflow: hidden;
          font-family: "Montserrat", sans-serif;
        }

        .table-row {
          display: flex;
          width: 100%;
        }

        .table-header {
          background-color: rgb(115, 112, 237);
          color: white;
          font-weight: 600;
        }

        .table-cell {
          flex: 1;
          padding: 12px;
          border-right: 1px solid #212233;
          border-bottom: 1px solid #212233;
          display: flex;
          align-items: center;
          justify-content: center;
          text-align: center;
          word-break: break-word;
          flex-direction: column;
        }

        .table-cell:last-child {
          border-right: none;
        }

        .table-header .table-cell {
          border-bottom: 2px solid #212233;
        }

        .table-actions {
          display: flex;
          gap: 8px;
          flex-wrap: wrap;
          justify-content: center;
        }

        input[type="text"],
        input[type="file"] {
          width: 100%;
          padding: 4px;
        }

        .table img {
          max-height: 80px;
        }

        button {
          padding: 6px 10px;
          border: none;
          background-color: #3d3fc3;
          color: white;
          border-radius: 6px;
          cursor: pointer;
        }

        button:hover {
          background-color: #5c5eda;
        }

        a {
          padding: 6px 10px;
          border: none;
          background-color: #3d3fc3;
          color: white;
          border-radius: 6px;
          cursor: pointer;
          text-decoration: none;
        }

        a:hover {
          text-decoration: underline;
        }
      </style>
      <form method="GET" action="">
        <div
          style="
            display: flex;
            flex-direction: row;
            align-items: center;
            gap: 15px;
            align-content: center;
            padding: 10px;
            background-color: rgb(33, 34, 51);
            border-radius: 12px;
            margin-bottom: 20px;
            width: max-content;
          "
        >
          <input name="searchStr" placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å—É—â–Ω–æ—Å—Ç—è–º" />
          <button type="submit">–ü–æ–∏—Å–∫</button>
        </div>
      </form>

      <div class="table">
        <!-- Header -->
        <div class="table-row table-header">
          <% displayFields.forEach(function(field) { const isCurrentSort =
          sortField === field[0]; const nextOrder = isCurrentSort && sortOrder
          === 'ASC' ? 'desc' : 'asc'; %>
          <div class="table-cell">
            <a
              href="?sort=<%= field[0] %>&order=<%= nextOrder %>"
              style="color: white; text-decoration: none"
            >
              <%= field[0] %> <% if (isCurrentSort) { %> <%= sortOrder === 'ASC'
              ? ' üîº' : ' üîΩ' %> <% } %>
            </a>
          </div>
          <% }); %>
          <div class="table-cell">Actions</div>
        </div>

        <!-- Body -->
        <div class="table-body">
          <% data.forEach(row => { %>
          <div class="table-row">
            <% displayFields.forEach(field => { %>
            <div class="table-cell">
              <% if (fileFields.includes(field[0])) { %> <% if (row[field[0]]) {
              %>
              <img
                src="<%= config.database.staticHost + row[field[0]] %>"
                alt="image"
              />
              <% } else { %> –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è <% } %> <% } else { %> <%=
              row[field[0]] %> <% } %>
            </div>
            <% }) %>

            <!-- Actions -->
            <div class="table-cell table-actions">
              <form
                method="POST"
                action="/admin/<%= tableName %>/delete/<%= row.id %>"
              >
                <button type="submit">üóë</button>
              </form>
              <a href="/admin/<%= tableName %>/edit/<%= row.id %>">‚úè</a>
            </div>
          </div>
          <% }) %>
        </div>

        <!-- Footer (Add new row) -->
        <form
          class="add-form"
          method="POST"
          action="/admin/<%= tableName %>/add"
          onsubmit="return validateForm(this)"
          enctype="multipart/form-data"
        >
          <div class="table-row">
            <% displayFields.forEach(field => { const name = field[0]; const
            type = field[1]; const isEditable = editable.includes(name); const
            isFile = (config.tables[tableName].fileFields || []).includes(name);
            const isKey = (config.tables[tableName].keys || []).includes(name);
            const relatedTable = (relations || []).find(r => r.TABLE_NAME ===
            tableName && r.COLUMN_NAME === name)?.REFERENCED_TABLE_NAME; %> <%
            if (name === 'id') { %>
            <div class="table-cell">‚Äî</div>
            <% } else { %>
            <div class="table-cell">
              <% if (isFile) { %>
              <input type="file" name="<%= name %>" />
              <% } else if (isKey && relatedTable && relatedData[relatedTable])
              { %>
              <div class="custom-select-container">
                <input
                  type="hidden"
                  name="<%= name %>"
                  id="<%= name %>_hidden"
                />
                <button
                  type="button"
                  class="open-modal-btn"
                  onclick="openModal('<%= name %>', '<%= relatedTable %>')"
                >
                  –í—ã–±—Ä–∞—Ç—å...
                </button>
                <span id="<%= name %>_selectedLabel" class="selected-label"
                  >–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</span
                >
              </div>

              <% } else { %> <input name="<%= name %>" <%= isEditable ? (
              type.includes('int') ? 'type="number" required' :
              type.includes('varchar') ? `type="text"
              maxlength="${(type.match(/\d+/) || [255])[0]}" required` :
              'type="text" required' ) : 'disabled' %> /> <% } %>
            </div>
            <% } %> <% }) %>

            <div class="table-cell">
              <button type="submit">‚ûï –î–æ–±–∞–≤–∏—Ç—å</button>
            </div>
          </div>
        </form>
      </div>
    </div>
    <div id="relationModal" class="modal" style="display: none">
      <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h3>–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç</h3>
        <table id="modalTable" class="modal-table">
          <thead>
            <tr id="modalTableHead"></tr>
          </thead>
          <tbody id="modalTableBody"></tbody>
        </table>
      </div>
    </div>
    <script>
      window.config = {
        tables: <%- JSON.stringify(config.tables) %>,
        database: {
          staticHost: "<%= config.database.staticHost %>"
        }
      };
    </script>

    <script>
      const relatedData = <%- JSON.stringify(relatedData) %>;
      let currentField = null;

      function openModal(fieldName, relatedTableName) {
        currentField = fieldName;
        const data = relatedData[relatedTableName] || [];

        // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        const head = document.getElementById('modalTableHead');
        head.innerHTML = '';
        const firstItem = data[0] || {};
        for (let key in firstItem) {
          const th = document.createElement('th');
          th.textContent = key;
          th.style.backgroundColor = 'rgb(24, 24, 38)'
          head.appendChild(th);
        }
        const thSelect = document.createElement('th');
        thSelect.textContent = '–í—ã–±–æ—Ä';
        thSelect.style.backgroundColor = 'rgb(24, 24, 38)'
        head.appendChild(thSelect);

        // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ª–∞ —Ç–∞–±–ª–∏—Ü—ã
        const body = document.getElementById('modalTableBody');
        body.innerHTML = '';
        data.forEach(item => {
          const row = document.createElement('tr');
          for (let key in item) {
            const td = document.createElement('td');


            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            const isImage = config.tables[relatedTableName].fileFields.includes(key);

            if (isImage) {
              const img = document.createElement('img');
              img.src = config.database.staticHost + item[key];
              img.style.maxWidth = '80px';
              img.style.maxHeight = '80px';
              img.style.objectFit = 'cover';
              td.appendChild(img);
            } else {
              td.textContent = item[key];
            }

            row.appendChild(td);
          }

          const tdBtn = document.createElement('td');
          const btn = document.createElement('button');
          btn.textContent = '–í—ã–±—Ä–∞—Ç—å';
          btn.onclick = () => {
            document.getElementById(`${fieldName}_hidden`).value = item.id;
            document.getElementById(`${fieldName}_selectedLabel`).textContent = item.name || item.title || item.url || `ID: ${item.id}`;
            closeModal();
          };
          tdBtn.appendChild(btn);
          row.appendChild(tdBtn);

          body.appendChild(row);
        });

        document.getElementById('relationModal').style.display = 'block';
      }

      function closeModal() {
        document.getElementById('relationModal').style.display = 'none';
      }
    </script>

    <script>
      function validateForm(form) {
        const inputs = form.querySelectorAll("input:not([disabled])");
        let isValid = true;

        inputs.forEach((input) => {
          if (!input.checkValidity()) {
            input.style.border = "1px solid red";
            isValid = false;
          } else {
            input.style.border = "";
          }
        });

        if (!isValid) {
          alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.");
        }

        return isValid;
      }
    </script>
  </body>
</html>
